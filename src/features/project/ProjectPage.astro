---
import Layout from "../../layouts/Layout.astro";
import { projects, icons } from "../../data/index";
import GithubLink from "../../components/GithubLink.astro";
import LiveLink from "../../components/LiveLink.astro";
import Skills from "./Skills.astro";
import ImageCarousel from "../../components/ImageCarousel.astro";
const { id } = Astro.props;
const projectDetails = projects.find((project) => project.id === id);
if (!projectDetails) return;

const {
  name,
  description,
  thumbnail,
  githubLink,
  liveLink,
  skills,
  screenshots,
  video,
} = projectDetails;
---

<Layout title={name}>
  <main
    class="max-w-5xl 2xl:max-w-7xl mx-auto bg-neutral-900 text-white text-sm md:text-lg p-10 pt-20 md:p-20 grid grid-cols-1 place-items-center auto-rows-auto gap-y-10 relative"
  >
    <div
      id="curtain"
      class="fixed top-0 left-0 w-screen h-screen z-10 bg-black"
    >
    </div>
    <h1 id="project-title" class="opacity-0 text-5xl lg:text-8xl lg:mb-16 z-20">
      {name}
    </h1>
    <p class="text-justify">{description}</p>

    {
      video && (
        <video
          class="hidden md:block"
          width="100%"
          height="auto"
          src={video}
          controls
        />
      )
    }

    {screenshots && <ImageCarousel imagePaths={screenshots} name={name} />}

    {skills && <Skills skills={skills} />}

    {
      (githubLink || liveLink) && (
        <ul class="grid grid-cols-2 gap-10 border-2 border-white place-items-center place-content-center p-4 mt-5">
          {githubLink && <GithubLink githubLink={githubLink} />}
          {liveLink && <LiveLink liveLink={liveLink} />}
        </ul>
      )
    }
  </main>
</Layout>

<script>
  import gsap from "gsap";
  const curtain = document.getElementById("curtain");
  const projectTitle = document.getElementById("project-title");

  const tl = gsap.timeline({ ease: "power2.easeOut" });

  tl.fromTo(
    projectTitle,
    {
      y: "30vh",
      ease: "slowmo",
      opacity: 1,
    },
    {
      y: 0,
      opacity: 1,
      duration: 0.5,
      delay: 1.5,
    }
  )
    .to(
      curtain,
      {
        y: "-100%",
        duration: 0.5,
      },
      "<-0.025"
    )
    .from(
      "p",
      {
        opacity: 0,
        y: 50,
        duration: 0.5,
      },
      "<+0.15"
    );
</script>
